// Microsoft Operations Insights | Workspaces | Tables | were removed to save space

{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
     //This section is for parameters
     
    "parameters": {
        "extensions_Microsoft_Insights_VMDiagnosticsSettings_xmlCfg": {
            "type": "SecureString"
        },
        "extensions_Microsoft_Insights_VMDiagnosticsSettings_storageAccountName": {
            "type": "SecureString"
        },
        "extensions_Microsoft_Insights_VMDiagnosticsSettings_storageAccountKey": {
            "type": "SecureString"
        },
        "extensions_Microsoft_Insights_VMDiagnosticsSettings_storageAccountEndPoint": {
            "type": "SecureString"
        },
        "extensions_Microsoft_Insights_VMDiagnosticsSettings_xmlCfg_1": {
            "type": "SecureString"
        },
        "extensions_Microsoft_Insights_VMDiagnosticsSettings_storageAccountName_1": {
            "type": "SecureString"
        },
        "extensions_Microsoft_Insights_VMDiagnosticsSettings_storageAccountKey_1": {
            "type": "SecureString"
        },
        "extensions_Microsoft_Insights_VMDiagnosticsSettings_storageAccountEndPoint_1": {
            "type": "SecureString"
        },
        "workbooks_4be8f749_7e11_44d5_809e_4006490d8b58_serializedData": {
            "type": "SecureString"
        },

        "virtualMachines_WebS_name": {
            "defaultValue": "WebS",
            "type": "String"
        },
        "virtualMachines_WebS_2_name": {
            "defaultValue": "WebS-2",
            "type": "String"
        },
        "virtualMachines_Win_10_name": {
            "defaultValue": "Win-10",
            "type": "String"
        },
        "virtualMachines_DB_Server_name": {
            "defaultValue": "DB-Server",
            "type": "String"
        },
        "loadBalancers_LB_Internal_name": {
            "defaultValue": "LB-Internal",
            "type": "String"
        },
        "networkInterfaces_webs337_name": {
            "defaultValue": "webs337",
            "type": "String"
        },
        "publicIPAddresses_WebS_ip_name": {
            "defaultValue": "WebS-ip",
            "type": "String"
        },
        "virtualNetworks_VN_project_name": {
            "defaultValue": "VN-project",
            "type": "String"
        },
        "networkInterfaces_webs_2403_name": {
            "defaultValue": "webs-2403",
            "type": "String"
        },
        "networkInterfaces_win_10612_name": {
            "defaultValue": "win-10612",
            "type": "String"
        },
        "publicIPAddresses_WebS_2_ip_name": {
            "defaultValue": "WebS-2-ip",
            "type": "String"
        },
        "publicIPAddresses_Win_10_ip_name": {
            "defaultValue": "Win-10-ip",
            "type": "String"
        },
        "virtualMachines_BLogic_Server_name": {
            "defaultValue": "BLogic-Server",
            "type": "String"
        },
        "workflows_BatchImportToSentinel_name": {
            "defaultValue": "BatchImportToSentinel",
            "type": "String"
        },
        "networkSecurityGroups_NSG_DMZ_name": {
            "defaultValue": "NSG-DMZ",
            "type": "String"
        },
        "networkInterfaces_db_server699_name": {
            "defaultValue": "db-server699",
            "type": "String"
        },
        "publicIPAddresses_DBServer_ip1_name": {
            "defaultValue": "DBServer-ip1",
            "type": "String"
        },
        "workflows_Log4jIndicatorProcessor_name": {
            "defaultValue": "Log4jIndicatorProcessor",
            "type": "String"
        },
        "publicIPAddresses_AppGate_PubIP_name": {
            "defaultValue": "AppGate-PubIP",
            "type": "String"
        },
        "applicationSecurityGroups_ASG_WEB_name": {
            "defaultValue": "ASG-WEB",
            "type": "String"
        },
        "networkInterfaces_blogic_server894_name": {
            "defaultValue": "blogic-server894",
            "type": "String"
        },
        "publicIPAddresses_BLogic_Server_ip_name": {
            "defaultValue": "BLogic-Server-ip",
            "type": "String"
        },
        "workflows_Get_GeoFromIpAndTagIncident_name": {
            "defaultValue": "Get-GeoFromIpAndTagIncident",
            "type": "String"
        },
        "networkSecurityGroups_NSG_BackSubnet_name": {
            "defaultValue": "NSG-BackSubnet",
            "type": "String"
        },
        "networkSecurityGroups_NSG_FrontSubnet_name": {
            "defaultValue": "NSG-FrontSubnet",
            "type": "String"
        },
        "dataCollectionRules_security_events_viaAMA_name": {
            "defaultValue": "security-events-viaAMA",
            "type": "String"
        },
        "workbooks_4be8f749_7e11_44d5_809e_4006490d8b58_name": {
            "defaultValue": "4be8f749-7e11-44d5-809e-4006490d8b58",
            "type": "String"
        },
        "workspaces_Logs_Analytics_Workspace_name": {
            "defaultValue": "Logs-Analytics-Workspace",
            "type": "String"
        },
        "connections_azuremonitorlogs_Log4jIndicatorProcessor_name": {
            "defaultValue": "azuremonitorlogs-Log4jIndicatorProcessor",
            "type": "String"
        },
        "scheduledqueryrules_Failed_Requests_on_webserver_name": {
            "defaultValue": "Failed-Requests-on-webserver",
            "type": "String"
        },
        "connections_azuresentinel_Get_GeoFromIpAndTagIncident_name": {
            "defaultValue": "azuresentinel-Get-GeoFromIpAndTagIncident",
            "type": "String"
        },
        "connections_microsoftgraphsecurity_BatchImportToSentinel_name": {
            "defaultValue": "microsoftgraphsecurity-BatchImportToSentinel",
            "type": "String"
        },
        "ApplicationGatewayWebApplicationFirewallPolicies_WAF_POLICY_2_name": {
            "defaultValue": "WAF-POLICY-2",
            "type": "String"
        },
        "solutions_SecurityInsights_Logs_Analytics_Workspace__name": {
            "defaultValue": "SecurityInsights(Logs-Analytics-Workspace)",
            "type": "String"
        },
        "applicationGateways_AppGateway_WAFV2_externalid": {
            "defaultValue": "/subscriptions/f00ad23d-cdc9-4c4c-ac1a-426c56b03f74/resourceGroups/Final-Project/providers/Microsoft.Network/applicationGateways/AppGateway-WAFV2",
            "type": "String"
        }
    },
    "variables": {},
    "resources": [
        // Scheduled Querry Rule
        {
            "type": "microsoft.insights/scheduledqueryrules",
            "apiVersion": "2021-08-01",
            "name": "[parameters('scheduledqueryrules_Failed_Requests_on_webserver_name')]",
            "location": "francecentral",
            "properties": {
                "displayName": "[parameters('scheduledqueryrules_Failed_Requests_on_webserver_name')]",
                "severity": 2,
                "enabled": true,
                "evaluationFrequency": "PT1H",
                "scopes": [
                    "[parameters('applicationGateways_AppGateway_WAFV2_externalid')]"
                ],
                "targetResourceTypes": [
                    "Microsoft.Network/applicationGateways"
                ],
                "windowSize": "PT1H",
                "criteria": {
                    "allOf": [
                        {
                            "query": "// Failed requests per hour \n// Count of requests to which Application Gateway responded with an error. \n// To create an alert for this query, click '+ New alert rule'\nAzureDiagnostics\n| where ResourceType == \"APPLICATIONGATEWAYS\" and OperationName == \"ApplicationGatewayAccess\" and httpStatus_d > 399\n| summarize AggregatedValue = count() by bin(TimeGenerated, 1h), _ResourceId\n| render timechart\n",
                            "timeAggregation": "Average",
                            "metricMeasureColumn": "AggregatedValue",
                            "dimensions": [],
                            "operator": "GreaterThan",
                            "threshold": 2,
                            "failingPeriods": {
                                "numberOfEvaluationPeriods": 1,
                                "minFailingPeriodsToAlert": 1
                            }
                        }
                    ]
                },
                "autoMitigate": true
            }
        },
        {
            "type": "microsoft.insights/workbooks",
            "apiVersion": "2021-08-01",
            "name": "[parameters('workbooks_4be8f749_7e11_44d5_809e_4006490d8b58_name')]",
            "location": "francecentral",
            "tags": {
                "hidden-title": "Workspace Usage-LogAnalytics"
            },
            "kind": "shared",
            "identity": {
                "type": "None"
            },
            "properties": {
                "displayName": "Workspace Usage-LogAnalytics",
                "version": "Notebook/1.0",
                "category": "workbook",
                "sourceId": "azure monitor",
                "serializedData": "[parameters('workbooks_4be8f749_7e11_44d5_809e_4006490d8b58_serializedData')]"
            }
        },
        {
  // WAF Policy- Custom Rule Settings

            "type": "Microsoft.Network/ApplicationGatewayWebApplicationFirewallPolicies",
            "apiVersion": "2020-11-01",
            "name": "[parameters('ApplicationGatewayWebApplicationFirewallPolicies_WAF_POLICY_2_name')]",
            "location": "francecentral",
            "properties": {
                "customRules": [
                    {
                        "name": "BlockingIPfromcertainCountry",
                        "priority": 4,
                        "ruleType": "MatchRule",
                        "action": "Block",
                        "matchConditions": [
                            {
                                "matchVariables": [
                                    {
                                        "variableName": "RemoteAddr"
                                    }
                                ],
                                "operator": "GeoMatch",
                                "negationConditon": false,
                                "matchValues": [
                                    "US"
                                ],
                                "transforms": []
                            }
                        ]
                    }
                ],
// WAF POLICIY SETTINGS- Prevention mode enabled 

                "policySettings": {
                    "requestBodyCheck": true,
                    "maxRequestBodySizeInKb": 128,
                    "fileUploadLimitInMb": 100,
                    "state": "Enabled",
                    "mode": "Prevention"
                },
// CORE RULE SET: OWASP 3.1

                "managedRules": {
                    "managedRuleSets": [
                        {
                            "ruleSetType": "OWASP",
                            "ruleSetVersion": "3.1",
                            "ruleGroupOverrides": []
                        }
                    ],
                    "exclusions": []
                }
            }
        },
        {
            "type": "Microsoft.Network/applicationSecurityGroups",
            "apiVersion": "2020-11-01",
            "name": "[parameters('applicationSecurityGroups_ASG_WEB_name')]",
            "location": "francecentral",
            "properties": {
                "provisioningState": "Succeeded"
            }
        },

// This Section Consists of Network Security Groups (NSGs) Settings

        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2020-11-01",
            "name": "[parameters('networkSecurityGroups_NSG_DMZ_name')]",
            "location": "francecentral",
            "properties": {
                "securityRules": [
                    {
                        "name": "RDP-rule-Allow",
                        "properties": {
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "3389",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "Deny-internet-in-BL",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "Internet",
                            "destinationAddressPrefix": "192.168.3.4",
                            "access": "Deny",
                            "priority": 110,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2020-11-01",
            "name": "[parameters('networkSecurityGroups_NSG_FrontSubnet_name')]",
            "location": "francecentral",
            "properties": {
                "securityRules": [
                    {
                        "name": "web-rule-allow",
                        "properties": {
                            "description": "Allowing All HTTP inbound Traffic",
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "80",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "rdp-allow",
                        "properties": {
                            "description": "Allowing remote access -rdp",
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "3389",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 110,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2020-11-01",
            "name": "[parameters('publicIPAddresses_AppGate_PubIP_name')]",
            "location": "francecentral",
            "sku": {
                "name": "Standard",
                "tier": "Regional"
            },
            "properties": {
                "ipAddress": "20.111.35.232",
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": 4,
                "ipTags": []
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2020-11-01",
            "name": "[parameters('publicIPAddresses_BLogic_Server_ip_name')]",
            "location": "francecentral",
            "sku": {
                "name": "Basic",
                "tier": "Regional"
            },
            "properties": {
                "ipAddress": "20.111.46.64",
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": 4,
                "ipTags": []
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2020-11-01",
            "name": "[parameters('publicIPAddresses_DBServer_ip1_name')]",
            "location": "francecentral",
            "sku": {
                "name": "Standard",
                "tier": "Regional"
            },
            "properties": {
                "ipAddress": "20.199.122.67",
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": 4,
                "ipTags": []
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2020-11-01",
            "name": "[parameters('publicIPAddresses_WebS_2_ip_name')]",
            "location": "francecentral",
            "sku": {
                "name": "Basic",
                "tier": "Regional"
            },
            "properties": {
                "ipAddress": "20.199.108.78",
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": 4,
                "ipTags": []
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2020-11-01",
            "name": "[parameters('publicIPAddresses_WebS_ip_name')]",
            "location": "francecentral",
            "sku": {
                "name": "Basic",
                "tier": "Regional"
            },
            "properties": {
                "ipAddress": "20.111.48.67",
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": 4,
                "ipTags": []
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2020-11-01",
            "name": "[parameters('publicIPAddresses_Win_10_ip_name')]",
            "location": "francecentral",
            "sku": {
                "name": "Standard",
                "tier": "Regional"
            },
            "properties": {
                "ipAddress": "20.111.43.64",
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": 4,
                "ipTags": []
            }
        },

    //Sentinel Log Analytics Workspace deployment in Azure

        {
            "type": "Microsoft.OperationalInsights/workspaces",
            "apiVersion": "2021-12-01-preview",
            "name": "[parameters('workspaces_Logs_Analytics_Workspace_name')]",
            "location": "francecentral",
            "properties": {
                "sku": {
                    "name": "pergb2018"
                },
                "retentionInDays": 30,
                "features": {
                    "enableLogAccessUsingOnlyResourcePermissions": true
                },
                "workspaceCapping": {
                    "dailyQuotaGb": -1
                },
                "publicNetworkAccessForIngestion": "Enabled",
                "publicNetworkAccessForQuery": "Enabled"
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[parameters('connections_azuremonitorlogs_Log4jIndicatorProcessor_name')]",
            "location": "francecentral",
            "kind": "V1",
            "properties": {
                "displayName": "username@domain",
                "statuses": [
                    {
                        "status": "Error",
                        "target": "token",
                        "error": {}
                    }
                ],
                "customParameterValues": {},
                "nonSecretParameterValues": {},
                "createdTime": "2022-05-02T14:16:37.0084Z",
                "changedTime": "2022-05-02T14:16:37.399027Z",
                "api": {
                    "name": "azuresentinel",
                    "displayName": "Microsoft Sentinel",
                    "description": "Cloud-native SIEM with a built-in AI so you can focus on what matters most",
                    "iconUri": "https://connectoricons-prod.azureedge.net/releases/v1.0.1573/1.0.1573.2770/azuresentinel/icon.png",
                    "brandColor": "#0072C6",
                    "id": "/subscriptions/f00ad23d-cdc9-4c4c-ac1a-426c56b03f74/providers/Microsoft.Web/locations/francecentral/managedApis/azuresentinel",
                    "type": "Microsoft.Web/locations/managedApis"
                },
                "testLinks": []
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[parameters('connections_azuresentinel_Get_GeoFromIpAndTagIncident_name')]",
            "location": "francecentral",
            "kind": "V1",
            "properties": {
                "displayName": "[parameters('connections_azuresentinel_Get_GeoFromIpAndTagIncident_name')]",
                "statuses": [
                    {
                        "status": "Connected"
                    }
                ],
                "customParameterValues": {},
                "nonSecretParameterValues": {},
                "createdTime": "2022-04-09T20:26:02.6184292Z",
                "changedTime": "2022-05-10T23:39:27.8346691Z",
                "api": {
                    "name": "azuresentinel",
                    "displayName": "Microsoft Sentinel",
                    "description": "Cloud-native SIEM with a built-in AI so you can focus on what matters most",
                    "iconUri": "https://connectoricons-prod.azureedge.net/releases/v1.0.1573/1.0.1573.2770/azuresentinel/icon.png",
                    "brandColor": "#0072C6",
                    "id": "/subscriptions/f00ad23d-cdc9-4c4c-ac1a-426c56b03f74/providers/Microsoft.Web/locations/francecentral/managedApis/azuresentinel",
                    "type": "Microsoft.Web/locations/managedApis"
                },
                "testLinks": []
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[parameters('connections_microsoftgraphsecurity_BatchImportToSentinel_name')]",
            "location": "francecentral",
            "kind": "V1",
            "properties": {
                "displayName": "username@domain",
                "statuses": [
                    {
                        "status": "Error",
                        "target": "token",
                        "error": {}
                    }
                ],
                "customParameterValues": {},
                "nonSecretParameterValues": {},
                "createdTime": "2022-05-02T14:16:36.9927574Z",
                "changedTime": "2022-05-02T14:16:37.399027Z",
                "api": {
                    "name": "microsoftgraphsecurity",
                    "displayName": "Microsoft Graph Security",
                    "description": "The Microsoft Graph Security connector helps to connect different Microsoft and partner security products and services, using a unified schema, to streamline security operations, and improve threat protection, detection, and response capabilities. Learn more about integrating with the Microsoft Graph Security API at https://aka.ms/graphsecuritydocs",
                    "iconUri": "https://connectoricons-prod.azureedge.net/releases/v1.0.1535/1.0.1535.2607/microsoftgraphsecurity/icon.png",
                    "brandColor": "#0078D6",
                    "id": "/subscriptions/f00ad23d-cdc9-4c4c-ac1a-426c56b03f74/providers/Microsoft.Web/locations/francecentral/managedApis/microsoftgraphsecurity",
                    "type": "Microsoft.Web/locations/managedApis"
                },
                "testLinks": []
            }
        },

// Virtual Machines (VMs) deployment in AZURE

        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2021-11-01",
            "name": "[parameters('virtualMachines_BLogic_Server_name')]",
            "location": "francecentral",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_blogic_server894_name'))]"
            ],
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "hardwareProfile": {
                    "vmSize": "Standard_B2s"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "MicrosoftWindowsDesktop",
                        "offer": "Windows-10",
                        "sku": "win10-21h2-pro-g2",
                        "version": "latest"
                    },
                    "osDisk": {
                        "osType": "Windows",
                        "name": "[concat(parameters('virtualMachines_BLogic_Server_name'), '_OsDisk_1_f426c01bc5f340158d1b1da2ab1e7aa1')]",
                        "createOption": "FromImage",
                        "caching": "ReadWrite",
                        "managedDisk": {
                            "id": "[resourceId('Microsoft.Compute/disks', concat(parameters('virtualMachines_BLogic_Server_name'), '_OsDisk_1_f426c01bc5f340158d1b1da2ab1e7aa1'))]"
                        },
                        "deleteOption": "Delete"
                    },
                    "dataDisks": []
                },
                "osProfile": {
                    "computerName": "[parameters('virtualMachines_BLogic_Server_name')]",
                    "adminUsername": "Blogic",
                    "windowsConfiguration": {
                        "provisionVMAgent": true,
                        "enableAutomaticUpdates": true,
                        "patchSettings": {
                            "patchMode": "AutomaticByOS",
                            "assessmentMode": "ImageDefault",
                            "enableHotpatching": false
                        }
                    },
                    "secrets": [],
                    "allowExtensionOperations": true,
                    "requireGuestProvisionSignal": true
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_blogic_server894_name'))]",
                            "properties": {
                                "deleteOption": "Detach"
                            }
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true
                    }
                },
                "licenseType": "Windows_Client"
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2021-11-01",
            "name": "[parameters('virtualMachines_DB_Server_name')]",
            "location": "francecentral",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_db_server699_name'))]"
            ],
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "hardwareProfile": {
                    "vmSize": "Standard_B2s"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "MicrosoftWindowsDesktop",
                        "offer": "Windows-10",
                        "sku": "win10-21h2-pro-g2",
                        "version": "latest"
                    },
                    "osDisk": {
                        "osType": "Windows",
                        "name": "[concat(parameters('virtualMachines_DB_Server_name'), '_OsDisk_1_81d714a05d434751bc1c84b087ea68df')]",
                        "createOption": "FromImage",
                        "caching": "ReadWrite",
                        "managedDisk": {
                            "id": "[resourceId('Microsoft.Compute/disks', concat(parameters('virtualMachines_DB_Server_name'), '_OsDisk_1_81d714a05d434751bc1c84b087ea68df'))]"
                        },
                        "deleteOption": "Delete"
                    },
                    "dataDisks": []
                },
                "osProfile": {
                    "computerName": "[parameters('virtualMachines_DB_Server_name')]",
                    "adminUsername": "[concat(parameters('virtualMachines_DB_Server_name'), '1')]",
                    "windowsConfiguration": {
                        "provisionVMAgent": true,
                        "enableAutomaticUpdates": true,
                        "patchSettings": {
                            "patchMode": "AutomaticByOS",
                            "assessmentMode": "ImageDefault",
                            "enableHotpatching": false
                        }
                    },
                    "secrets": [],
                    "allowExtensionOperations": true,
                    "requireGuestProvisionSignal": true
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_db_server699_name'))]",
                            "properties": {
                                "deleteOption": "Detach"
                            }
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true
                    }
                },
                "licenseType": "Windows_Client"
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2021-11-01",
            "name": "[parameters('virtualMachines_WebS_name')]",
            "location": "francecentral",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_webs337_name'))]"
            ],
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "hardwareProfile": {
                    "vmSize": "Standard_B2s"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "MicrosoftWindowsDesktop",
                        "offer": "Windows-10",
                        "sku": "win10-21h2-pro-g2",
                        "version": "latest"
                    },
                    "osDisk": {
                        "osType": "Windows",
                        "name": "[concat(parameters('virtualMachines_WebS_name'), '_disk1_d38e7d5b5b3a49c6b29563fa1a29d17e')]",
                        "createOption": "FromImage",
                        "caching": "ReadWrite",
                        "managedDisk": {
                            "storageAccountType": "Standard_LRS",
                            "id": "[resourceId('Microsoft.Compute/disks', concat(parameters('virtualMachines_WebS_name'), '_disk1_d38e7d5b5b3a49c6b29563fa1a29d17e'))]"
                        },
                        "deleteOption": "Delete",
                        "diskSizeGB": 127
                    },
                    "dataDisks": []
                },
                "osProfile": {
                    "computerName": "[parameters('virtualMachines_WebS_name')]",
                    "adminUsername": "webserver1",
                    "windowsConfiguration": {
                        "provisionVMAgent": true,
                        "enableAutomaticUpdates": true,
                        "patchSettings": {
                            "patchMode": "AutomaticByOS",
                            "assessmentMode": "ImageDefault",
                            "enableHotpatching": false
                        }
                    },
                    "secrets": [],
                    "allowExtensionOperations": true,
                    "requireGuestProvisionSignal": true
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_webs337_name'))]",
                            "properties": {
                                "deleteOption": "Detach"
                            }
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true
                    }
                },
                "licenseType": "Windows_Client"
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2021-11-01",
            "name": "[parameters('virtualMachines_WebS_2_name')]",
            "location": "francecentral",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_webs_2403_name'))]"
            ],
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "hardwareProfile": {
                    "vmSize": "Standard_B2s"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "MicrosoftWindowsDesktop",
                        "offer": "Windows-10",
                        "sku": "win10-21h2-pro-g2",
                        "version": "latest"
                    },
                    "osDisk": {
                        "osType": "Windows",
                        "name": "[concat(parameters('virtualMachines_WebS_2_name'), '_disk1_8403907a7faf4d20b478f80063a16022')]",
                        "createOption": "FromImage",
                        "caching": "ReadWrite",
                        "managedDisk": {
                            "id": "[resourceId('Microsoft.Compute/disks', concat(parameters('virtualMachines_WebS_2_name'), '_disk1_8403907a7faf4d20b478f80063a16022'))]"
                        },
                        "deleteOption": "Delete"
                    },
                    "dataDisks": []
                },
                "osProfile": {
                    "computerName": "[parameters('virtualMachines_WebS_2_name')]",
                    "adminUsername": "webserver2",
                    "windowsConfiguration": {
                        "provisionVMAgent": true,
                        "enableAutomaticUpdates": true,
                        "patchSettings": {
                            "patchMode": "AutomaticByOS",
                            "assessmentMode": "ImageDefault",
                            "enableHotpatching": false
                        }
                    },
                    "secrets": [],
                    "allowExtensionOperations": true,
                    "requireGuestProvisionSignal": true
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_webs_2403_name'))]",
                            "properties": {
                                "deleteOption": "Detach"
                            }
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true
                    }
                },
                "licenseType": "Windows_Client"
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2021-11-01",
            "name": "[parameters('virtualMachines_Win_10_name')]",
            "location": "francecentral",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_win_10612_name'))]"
            ],
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "hardwareProfile": {
                    "vmSize": "Standard_B2s"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "MicrosoftWindowsDesktop",
                        "offer": "Windows-10",
                        "sku": "win10-21h2-pro-g2",
                        "version": "latest"
                    },
                    "osDisk": {
                        "osType": "Windows",
                        "name": "[concat(parameters('virtualMachines_Win_10_name'), '_OsDisk_1_c25e4dfcc839462abc3f4368aefba93b')]",
                        "createOption": "FromImage",
                        "caching": "ReadWrite",
                        "managedDisk": {
                            "id": "[resourceId('Microsoft.Compute/disks', concat(parameters('virtualMachines_Win_10_name'), '_OsDisk_1_c25e4dfcc839462abc3f4368aefba93b'))]"
                        },
                        "deleteOption": "Delete"
                    },
                    "dataDisks": []
                },
                "osProfile": {
                    "computerName": "[parameters('virtualMachines_Win_10_name')]",
                    "adminUsername": "Win10",
                    "windowsConfiguration": {
                        "provisionVMAgent": true,
                        "enableAutomaticUpdates": true,
                        "patchSettings": {
                            "patchMode": "AutomaticByOS",
                            "assessmentMode": "ImageDefault",
                            "enableHotpatching": false
                        }
                    },
                    "secrets": [],
                    "allowExtensionOperations": true,
                    "requireGuestProvisionSignal": true
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_win_10612_name'))]",
                            "properties": {
                                "deleteOption": "Detach"
                            }
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true
                    }
                },
                "licenseType": "Windows_Client"
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "apiVersion": "2021-11-01",
            "name": "[concat(parameters('virtualMachines_Win_10_name'), '/AzureNetworkWatcherExtension')]",
            "location": "francecentral",
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachines_Win_10_name'))]"
            ],
            "properties": {
                "autoUpgradeMinorVersion": true,
                "publisher": "Microsoft.Azure.NetworkWatcher",
                "type": "NetworkWatcherAgentWindows",
                "typeHandlerVersion": "1.4"
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "apiVersion": "2021-11-01",
            "name": "[concat(parameters('virtualMachines_DB_Server_name'), '/enablevmaccess')]",
            "location": "francecentral",
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachines_DB_Server_name'))]"
            ],
            "properties": {
                "autoUpgradeMinorVersion": true,
                "publisher": "Microsoft.Compute",
                "type": "VMAccessAgent",
                "typeHandlerVersion": "2.0",
                "settings": {
                    "UserName": "DB-server1"
                },
                "protectedSettings": {}
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "apiVersion": "2021-11-01",
            "name": "[concat(parameters('virtualMachines_WebS_name'), '/Microsoft.Insights.VMDiagnosticsSettings')]",
            "location": "francecentral",
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachines_WebS_name'))]"
            ],
            "properties": {
                "autoUpgradeMinorVersion": true,
                "publisher": "Microsoft.Azure.Diagnostics",
                "type": "IaaSDiagnostics",
                "typeHandlerVersion": "1.5",
                "settings": {
                    "StorageAccount": "finalprojectguestdiag",
                    "xmlCfg": "[parameters('extensions_Microsoft_Insights_VMDiagnosticsSettings_xmlCfg')]"
                },
                "protectedSettings": {
                    "storageAccountName": "[parameters('extensions_Microsoft_Insights_VMDiagnosticsSettings_storageAccountName')]",
                    "storageAccountKey": "[parameters('extensions_Microsoft_Insights_VMDiagnosticsSettings_storageAccountKey')]",
                    "storageAccountEndPoint": "[parameters('extensions_Microsoft_Insights_VMDiagnosticsSettings_storageAccountEndPoint')]"
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "apiVersion": "2021-11-01",
            "name": "[concat(parameters('virtualMachines_WebS_2_name'), '/Microsoft.Insights.VMDiagnosticsSettings')]",
            "location": "francecentral",
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachines_WebS_2_name'))]"
            ],
            "properties": {
                "autoUpgradeMinorVersion": true,
                "publisher": "Microsoft.Azure.Diagnostics",
                "type": "IaaSDiagnostics",
                "typeHandlerVersion": "1.5",
                "settings": {
                    "StorageAccount": "finalprojectguestdiag",
                    "xmlCfg": "[parameters('extensions_Microsoft_Insights_VMDiagnosticsSettings_xmlCfg_1')]"
                },
                "protectedSettings": {
                    "storageAccountName": "[parameters('extensions_Microsoft_Insights_VMDiagnosticsSettings_storageAccountName_1')]",
                    "storageAccountKey": "[parameters('extensions_Microsoft_Insights_VMDiagnosticsSettings_storageAccountKey_1')]",
                    "storageAccountEndPoint": "[parameters('extensions_Microsoft_Insights_VMDiagnosticsSettings_storageAccountEndPoint_1')]"
                }
            }
        },
// Data Collection Rules-Feeding to Sentinel Log Analytics

        {
            "type": "Microsoft.Insights/dataCollectionRules",
            "apiVersion": "2021-04-01",
            "name": "[parameters('dataCollectionRules_security_events_viaAMA_name')]",
            "location": "francecentral",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_Logs_Analytics_Workspace_name'))]"
            ],
            "tags": {
                "createdBy": "Sentinel"
            },
            "kind": "Windows",
            "properties": {
                "dataSources": {
                    "windowsEventLogs": [
                        {
                            "streams": [
                                "Microsoft-SecurityEvent"
                            ],
                            "xPathQueries": [
                                "Security!*",
                                "Microsoft-Windows-AppLocker/EXE and DLL!*",
                                "Microsoft-Windows-AppLocker/MSI and Script!*"
                            ],
                            "name": "eventLogsDataSource"
                        }
                    ]
                },
                "destinations": {
                    "logAnalytics": [
                        {
                            "workspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_Logs_Analytics_Workspace_name'))]",
                            "name": "DataCollectionEvent"
                        }
                    ]
                },
                "dataFlows": [
                    {
                        "streams": [
                            "Microsoft-SecurityEvent"
                        ],
                        "destinations": [
                            "DataCollectionEvent"
                        ]
                    }
                ]
            }
        },
//Logic Workflows
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('workflows_BatchImportToSentinel_name')]",
            "location": "francecentral",
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', parameters('connections_microsoftgraphsecurity_BatchImportToSentinel_name'))]"
            ],
            "tags": {
                "LogicAppsCategory": "security"
            },
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.@{variables('azureManagementUrl')}/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "Batch_messages": {
                            "type": "Batch",
                            "inputs": {
                                "configurations": {
                                    "tiIndicators": {
                                        "releaseCriteria": {
                                            "messageCount": 10,
                                            "recurrence": {
                                                "frequency": "Hour",
                                                "interval": 1
                                            }
                                        }
                                    }
                                },
                                "mode": "Inline"
                            }
                        }
                    },
                    "actions": {
                        "Select": {
                            "type": "Select",
                            "inputs": {
                                "from": "@triggerBody()['items']",
                                "select": "@item()['content']"
                            }
                        },
                        "Submit_multiple_tiIndicators": {
                            "runAfter": {
                                "Select": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "body": {
                                    "value": "@body('Select')"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['microsoftgraphsecurity']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/beta/security/tiIndicators/submitTiIndicators",
                                "retryPolicy": {
                                    "count": 90,
                                    "interval": "PT60S",
                                    "type": "fixed"
                                }
                            }
                        }
                    }
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "microsoftgraphsecurity": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_microsoftgraphsecurity_BatchImportToSentinel_name'))]",
                                "connectionName": "[concat('microsoftgraphsecurity-', parameters('workflows_BatchImportToSentinel_name'))]",
                                "id": "/subscriptions/f00ad23d-cdc9-4c4c-ac1a-426c56b03f74/providers/Microsoft.Web/locations/francecentral/managedApis/microsoftgraphsecurity"
                            }
                        }
                    }
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('workflows_Get_GeoFromIpAndTagIncident_name')]",
            "location": "francecentral",
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', parameters('connections_azuresentinel_Get_GeoFromIpAndTagIncident_name'))]"
            ],
            "tags": {
                "LogicAppsCategory": "security"
            },
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "When_a_response_to_an_Azure_Sentinel_alert_is_triggered": {
                            "type": "ApiConnectionWebhook",
                            "inputs": {
                                "body": {
                                    "callback_url": "@{listCallbackUrl()}"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "path": "/subscribe"
                            }
                        }
                    },
                    "actions": {
                        "Alert_-_Get_IPs": {
                            "runAfter": {
                                "Alert_-_Get_incident": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "body": "@triggerBody()?['Entities']",
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/entities/ip"
                            }
                        },
                        "Alert_-_Get_incident": {
                            "runAfter": {},
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/Cases/@{encodeURIComponent(triggerBody()?['SystemAlertId'])}/@{encodeURIComponent(triggerBody()?['WorkspaceSubscriptionId'])}/@{encodeURIComponent(triggerBody()?['WorkspaceId'])}/@{encodeURIComponent(triggerBody()?['WorkspaceResourceGroup'])}"
                            }
                        },
                        "For_each": {
                            "foreach": "@body('Alert_-_Get_IPs')?['IPs']",
                            "actions": {
                                "Add_labels_to_incident": {
                                    "runAfter": {
                                        "Parse_JSON": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": {
                                            "Labels": [
                                                {
                                                    "Label": "@body('Parse_JSON')?['city']"
                                                },
                                                {
                                                    "Label": "@body('Parse_JSON')?['country']"
                                                }
                                            ]
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                            }
                                        },
                                        "method": "put",
                                        "path": "/Case/@{encodeURIComponent(triggerBody()?['WorkspaceSubscriptionId'])}/@{encodeURIComponent(triggerBody()?['WorkspaceId'])}/@{encodeURIComponent(triggerBody()?['WorkspaceResourceGroup'])}/@{encodeURIComponent('Incident')}/@{encodeURIComponent(body('Alert_-_Get_incident')?['properties']?['CaseNumber'])}/AddLabels"
                                    }
                                },
                                "HTTP": {
                                    "runAfter": {},
                                    "type": "Http",
                                    "inputs": {
                                        "method": "GET",
                                        "uri": "http://ip-api.com/json/@{items('For_each')?['Address']}"
                                    }
                                },
                                "Parse_JSON": {
                                    "runAfter": {
                                        "HTTP": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ParseJson",
                                    "inputs": {
                                        "content": "@body('HTTP')",
                                        "schema": {
                                            "properties": {
                                                "as": {
                                                    "type": "string"
                                                },
                                                "city": {
                                                    "type": "string"
                                                },
                                                "country": {
                                                    "type": "string"
                                                },
                                                "countryCode": {
                                                    "type": "string"
                                                },
                                                "isp": {
                                                    "type": "string"
                                                },
                                                "lat": {
                                                    "type": "number"
                                                },
                                                "lon": {
                                                    "type": "number"
                                                },
                                                "org": {
                                                    "type": "string"
                                                },
                                                "query": {
                                                    "type": "string"
                                                },
                                                "region": {
                                                    "type": "string"
                                                },
                                                "regionName": {
                                                    "type": "string"
                                                },
                                                "status": {
                                                    "type": "string"
                                                },
                                                "timezone": {
                                                    "type": "string"
                                                },
                                                "zip": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                }
                            },
                            "runAfter": {
                                "Alert_-_Get_IPs": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach",
                            "runtimeConfiguration": {
                                "concurrency": {
                                    "repetitions": 1
                                }
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azuresentinel": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_azuresentinel_Get_GeoFromIpAndTagIncident_name'))]",
                                "connectionName": "[concat('azuresentinel-', parameters('workflows_Get_GeoFromIpAndTagIncident_name'))]",
                                "id": "/subscriptions/f00ad23d-cdc9-4c4c-ac1a-426c56b03f74/providers/Microsoft.Web/locations/francecentral/managedApis/azuresentinel"
                            }
                        }
                    }
                }
            }
        },

// Load Balancer Deployment

        {
            "type": "Microsoft.Network/loadBalancers/backendAddressPools",
            "apiVersion": "2020-11-01",
            "name": "[concat(parameters('loadBalancers_LB_Internal_name'), '/BackEndPool-2')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_LB_Internal_name'))]"
            ],
            "properties": {
                "loadBalancerBackendAddresses": [
                    {
                        "name": "Final-Project_win-10612ipconfig1",
                        "properties": {}
                    },
                    {
                        "name": "Final-Project_db-server699ipconfig1",
                        "properties": {}
                    }
                ]
            }
        },
        {
//  NSG-Security Rules 

            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2020-11-01",
            "name": "[parameters('networkSecurityGroups_NSG_BackSubnet_name')]",
            "location": "francecentral",
            "dependsOn": [
                "[resourceId('Microsoft.Network/applicationSecurityGroups', parameters('applicationSecurityGroups_ASG_WEB_name'))]"
            ],
            "properties": {
                "securityRules": [
                    {
                        "name": "Ms-SQL-rule-allow",
                        "properties": {
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "1433",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "RDP-rule-allow",
                        "properties": {
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "3389",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 120,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "Loadbalancer-allow",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "AzureLoadBalancer",
                            "access": "Allow",
                            "priority": 150,
                            "direction": "Outbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "Internet-Deny",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "Internet",
                            "access": "Deny",
                            "priority": 160,
                            "direction": "Outbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "Allow-BL-server",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "192.168.3.4",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 130,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "ASG-WEB-Deny",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Deny",
                            "priority": 170,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": [],
                            "sourceApplicationSecurityGroups": [
                                {
                                    "id": "[resourceId('Microsoft.Network/applicationSecurityGroups', parameters('applicationSecurityGroups_ASG_WEB_name'))]"
                                }
                            ]
                        }
                    },
                    {
                        "name": "ASG-Deny",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "access": "Deny",
                            "priority": 180,
                            "direction": "Outbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": [],
                            "destinationApplicationSecurityGroups": [
                                {
                                    "id": "[resourceId('Microsoft.Network/applicationSecurityGroups', parameters('applicationSecurityGroups_ASG_WEB_name'))]"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2020-11-01",
            "name": "[concat(parameters('networkSecurityGroups_NSG_BackSubnet_name'), '/Allow-BL-server')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_NSG_BackSubnet_name'))]"
            ],
            "properties": {
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "*",
                "sourceAddressPrefix": "192.168.3.4",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 130,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2020-11-01",
            "name": "[concat(parameters('networkSecurityGroups_NSG_DMZ_name'), '/Deny-internet-in-BL')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_NSG_DMZ_name'))]"
            ],
            "properties": {
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "*",
                "sourceAddressPrefix": "Internet",
                "destinationAddressPrefix": "192.168.3.4",
                "access": "Deny",
                "priority": 110,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2020-11-01",
            "name": "[concat(parameters('networkSecurityGroups_NSG_BackSubnet_name'), '/Internet-Deny')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_NSG_BackSubnet_name'))]"
            ],
            "properties": {
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "*",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "Internet",
                "access": "Deny",
                "priority": 160,
                "direction": "Outbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2020-11-01",
            "name": "[concat(parameters('networkSecurityGroups_NSG_BackSubnet_name'), '/Loadbalancer-allow')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_NSG_BackSubnet_name'))]"
            ],
            "properties": {
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "*",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "AzureLoadBalancer",
                "access": "Allow",
                "priority": 150,
                "direction": "Outbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2020-11-01",
            "name": "[concat(parameters('networkSecurityGroups_NSG_BackSubnet_name'), '/Ms-SQL-rule-allow')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_NSG_BackSubnet_name'))]"
            ],
            "properties": {
                "protocol": "TCP",
                "sourcePortRange": "*",
                "destinationPortRange": "1433",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 100,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2020-11-01",
            "name": "[concat(parameters('networkSecurityGroups_NSG_FrontSubnet_name'), '/rdp-allow')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_NSG_FrontSubnet_name'))]"
            ],
            "properties": {
                "description": "Allowing remote access -rdp",
                "protocol": "TCP",
                "sourcePortRange": "*",
                "destinationPortRange": "3389",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 110,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2020-11-01",
            "name": "[concat(parameters('networkSecurityGroups_NSG_BackSubnet_name'), '/RDP-rule-allow')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_NSG_BackSubnet_name'))]"
            ],
            "properties": {
                "protocol": "TCP",
                "sourcePortRange": "*",
                "destinationPortRange": "3389",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 120,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2020-11-01",
            "name": "[concat(parameters('networkSecurityGroups_NSG_DMZ_name'), '/RDP-rule-Allow')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_NSG_DMZ_name'))]"
            ],
            "properties": {
                "protocol": "TCP",
                "sourcePortRange": "*",
                "destinationPortRange": "3389",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 100,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2020-11-01",
            "name": "[concat(parameters('networkSecurityGroups_NSG_FrontSubnet_name'), '/web-rule-allow')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_NSG_FrontSubnet_name'))]"
            ],
            "properties": {
                "description": "Allowing All HTTP inbound Traffic",
                "protocol": "TCP",
                "sourcePortRange": "*",
                "destinationPortRange": "80",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 100,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2020-11-01",
            "name": "[concat(parameters('virtualNetworks_VN_project_name'), '/FrontSubnet')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_VN_project_name'))]"
            ],
            "properties": {
                "addressPrefix": "192.168.1.0/24",
                "serviceEndpoints": [],
                "delegations": [],
                "privateEndpointNetworkPolicies": "Enabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },

        {
            "type": "Microsoft.OperationsManagement/solutions",
            "apiVersion": "2015-11-01-preview",
            "name": "[parameters('solutions_SecurityInsights_Logs_Analytics_Workspace__name')]",
            "location": "francecentral",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_Logs_Analytics_Workspace_name'))]"
            ],
            "plan": {
                "name": "SecurityInsights(logs-analytics-workspace)",
                "promotionCode": "",
                "product": "OMSGallery/SecurityInsights",
                "publisher": "Microsoft"
            },
            "properties": {
                "workspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_Logs_Analytics_Workspace_name'))]",
                "containedResources": []
            }
        },

// Logic Worlflow

        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('workflows_Log4jIndicatorProcessor_name')]",
            "location": "francecentral",
            "dependsOn": [
                "[resourceId('Microsoft.Logic/workflows', parameters('workflows_BatchImportToSentinel_name'))]",
                "[resourceId('Microsoft.Web/connections', parameters('connections_azuremonitorlogs_Log4jIndicatorProcessor_name'))]"
            ],
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.@{variables('azureManagementUrl')}/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "Recurrence": {
                            "recurrence": {
                                "frequency": "Day",
                                "interval": 1
                            },
                            "evaluatedRecurrence": {
                                "frequency": "Day",
                                "interval": 1
                            },
                            "type": "Recurrence"
                        }
                    },
                    "actions": {
                        "For_each": {
                            "foreach": "@body('Select_Log4j_indicators_and_transform_to_tiIndicators')",
                            "actions": {
                                "BatchImportToSentinel": {
                                    "type": "SendToBatch",
                                    "inputs": {
                                        "batchName": "tiIndicators",
                                        "content": "@items('For_each')",
                                        "host": {
                                            "triggerName": "Batch_messages",
                                            "workflow": {
                                                "id": "[resourceId('Microsoft.Logic/workflows', parameters('workflows_BatchImportToSentinel_name'))]"
                                            }
                                        }
                                    }
                                }
                            },
                            "runAfter": {
                                "Select_Log4j_indicators_and_transform_to_tiIndicators": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "Parse_JSON": {
                            "runAfter": {
                                "Run_query_and_list_results_V2_2": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ParseJson",
                            "inputs": {
                                "content": "@body('Run_query_and_list_results_V2_2')",
                                "schema": {
                                    "properties": {
                                        "value": {
                                            "items": {
                                                "properties": {
                                                    "IPAddress": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "IPAddress"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "Run_query_and_list_results_V2_2": {
                            "type": "ApiConnection",
                            "inputs": {
                                "body": {
                                    "query": "externaldata(IPAddress: string)[h@\"https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/Sample%20Data/Feeds/Log4j_IOC_List.csv\"] with (ignoreFirstRecord = true)",
                                    "timerange": {
                                        "relativeTimeRange": "Last 24 hours"
                                    },
                                    "timerangetype": "2"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuremonitorlogs']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/queryDataV2",
                                "queries": {
                                    "resourcegroups": "Final-Project",
                                    "resourcename": "Microsoft Sentinel Workspace Name",
                                    "resourcetype": "Log Analytics Workspace",
                                    "subscriptions": "f00ad23d-cdc9-4c4c-ac1a-426c56b03f74"
                                }
                            }
                        },
                        "Select_Log4j_indicators_and_transform_to_tiIndicators": {
                            "runAfter": {
                                "Parse_JSON": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Select",
                            "inputs": {
                                "from": "@body('Parse_JSON')?['value']",
                                "select": {
                                    "action": "alert",
                                    "confidence": "100",
                                    "description": "Microsoft Log4j threat indicator",
                                    "expirationDateTime": "2030-05-01T00:00:00Z",
                                    "networkIPv4": "@item()?['IPAddress']",
                                    "targetProduct": "Azure Sentinel",
                                    "threatType": "WatchList",
                                    "tlpLevel": "white"
                                }
                            }
                        }
                    }
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azuremonitorlogs": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_azuremonitorlogs_Log4jIndicatorProcessor_name'))]",
                                "connectionName": "[concat('azuremonitorlogs-', parameters('workflows_Log4jIndicatorProcessor_name'))]",
                                "id": "/subscriptions/f00ad23d-cdc9-4c4c-ac1a-426c56b03f74/providers/Microsoft.Web/locations/francecentral/managedApis/azuremonitorlogs"
                            }
                        }
                    }
                }
            }
        },

// Load Balancing Rules

        {
            "type": "Microsoft.Network/loadBalancers",
            "apiVersion": "2020-11-01",
            "name": "[parameters('loadBalancers_LB_Internal_name')]",
            "location": "francecentral",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_VN_project_name'), 'BackSubnet')]",
                "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', parameters('loadBalancers_LB_Internal_name'), 'BackEndPool-2')]"
            ],
            "sku": {
                "name": "Standard",
                "tier": "Regional"
            },
            "properties": {
                "frontendIPConfigurations": [
                    {
                        "name": "LB-FrontIP",
                        "properties": {
                            "privateIPAddress": "192.168.2.6",
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_VN_project_name'), 'BackSubnet')]"
                            },
                            "privateIPAddressVersion": "IPv4"
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "BackEndPool-2",
                        "properties": {
                            "loadBalancerBackendAddresses": [
                                {
                                    "name": "Final-Project_win-10612ipconfig1",
                                    "properties": {}
                                },
                                {
                                    "name": "Final-Project_db-server699ipconfig1",
                                    "properties": {}
                                }
                            ]
                        }
                    }
                ],
                "loadBalancingRules": [
                    {
                        "name": "LoadBalancing-rule",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_LB_Internal_name')), '/frontendIPConfigurations/LB-FrontIP')]"
                            },
                            "frontendPort": 80,
                            "backendPort": 80,
                            "enableFloatingIP": false,
                            "idleTimeoutInMinutes": 4,
                            "protocol": "Tcp",
                            "enableTcpReset": false,
                            "loadDistribution": "Default",
                            "disableOutboundSnat": true,
                            "backendAddressPool": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', parameters('loadBalancers_LB_Internal_name'), 'BackEndPool-2')]"
                            },
                            "probe": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_LB_Internal_name')), '/probes/LB-HealthProbe-1')]"
                            }
                        }
                    }
                ],
                "probes": [
                    {
                        "name": "LB-HealthProbe-1",
                        "properties": {
                            "protocol": "Tcp",
                            "port": 80,
                            "intervalInSeconds": 5,
                            "numberOfProbes": 2
                        }
                    }
                ],
                "inboundNatRules": [],
                "outboundRules": [],
                "inboundNatPools": []
            }
        },

// Network Interface Configurations

        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2020-11-01",
            "name": "[parameters('networkInterfaces_blogic_server894_name')]",
            "location": "francecentral",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_BLogic_Server_ip_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_VN_project_name'), 'DMZ-Subnet')]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAddress": "192.168.3.4",
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_BLogic_Server_ip_name'))]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_VN_project_name'), 'DMZ-Subnet')]"
                            },
                            "primary": true,
                            "privateIPAddressVersion": "IPv4"
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": []
                },
                "enableAcceleratedNetworking": false,
                "enableIPForwarding": false
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2020-11-01",
            "name": "[concat(parameters('networkSecurityGroups_NSG_BackSubnet_name'), '/ASG-Deny')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_NSG_BackSubnet_name'))]",
                "[resourceId('Microsoft.Network/applicationSecurityGroups', parameters('applicationSecurityGroups_ASG_WEB_name'))]"
            ],
            "properties": {
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "*",
                "sourceAddressPrefix": "*",
                "access": "Deny",
                "priority": 180,
                "direction": "Outbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": [],
                "destinationApplicationSecurityGroups": [
                    {
                        "id": "[resourceId('Microsoft.Network/applicationSecurityGroups', parameters('applicationSecurityGroups_ASG_WEB_name'))]"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2020-11-01",
            "name": "[concat(parameters('networkSecurityGroups_NSG_BackSubnet_name'), '/ASG-WEB-Deny')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_NSG_BackSubnet_name'))]",
                "[resourceId('Microsoft.Network/applicationSecurityGroups', parameters('applicationSecurityGroups_ASG_WEB_name'))]"
            ],
            "properties": {
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "*",
                "destinationAddressPrefix": "*",
                "access": "Deny",
                "priority": 170,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": [],
                "sourceApplicationSecurityGroups": [
                    {
                        "id": "[resourceId('Microsoft.Network/applicationSecurityGroups', parameters('applicationSecurityGroups_ASG_WEB_name'))]"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2020-11-01",
            "name": "[parameters('virtualNetworks_VN_project_name')]",
            "location": "francecentral",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_NSG_BackSubnet_name'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_NSG_DMZ_name'))]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "192.168.0.0/16"
                    ]
                },
                "subnets": [
                    {
                        "name": "FrontSubnet",
                        "properties": {
                            "addressPrefix": "192.168.1.0/24",
                            "serviceEndpoints": [],
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Enabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        }
                    },
                    {
                        "name": "BackSubnet",
                        "properties": {
                            "addressPrefix": "192.168.2.0/24",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_NSG_BackSubnet_name'))]"
                            },
                            "serviceEndpoints": [],
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Enabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        }
                    },
                    {
                        "name": "DMZ-Subnet",
                        "properties": {
                            "addressPrefix": "192.168.3.0/24",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_NSG_DMZ_name'))]"
                            },
                            "serviceEndpoints": [],
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Enabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        }
                    }
                ],
                "virtualNetworkPeerings": [],
                "enableDdosProtection": false
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2020-11-01",
            "name": "[concat(parameters('virtualNetworks_VN_project_name'), '/BackSubnet')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_VN_project_name'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_NSG_BackSubnet_name'))]"
            ],
            "properties": {
                "addressPrefix": "192.168.2.0/24",
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_NSG_BackSubnet_name'))]"
                },
                "serviceEndpoints": [],
                "delegations": [],
                "privateEndpointNetworkPolicies": "Enabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2020-11-01",
            "name": "[concat(parameters('virtualNetworks_VN_project_name'), '/DMZ-Subnet')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_VN_project_name'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_NSG_DMZ_name'))]"
            ],
            "properties": {
                "addressPrefix": "192.168.3.0/24",
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_NSG_DMZ_name'))]"
                },
                "serviceEndpoints": [],
                "delegations": [],
                "privateEndpointNetworkPolicies": "Enabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2020-11-01",
            "name": "[parameters('networkInterfaces_db_server699_name')]",
            "location": "francecentral",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_DBServer_ip1_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_VN_project_name'), 'BackSubnet')]",
                "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', parameters('loadBalancers_LB_Internal_name'), 'BackEndPool-2')]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAddress": "192.168.2.4",
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_DBServer_ip1_name'))]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_VN_project_name'), 'BackSubnet')]"
                            },
                            "primary": true,
                            "privateIPAddressVersion": "IPv4",
                            "loadBalancerBackendAddressPools": [
                                {
                                    "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', parameters('loadBalancers_LB_Internal_name'), 'BackEndPool-2')]"
                                }
                            ]
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": []
                },
                "enableAcceleratedNetworking": false,
                "enableIPForwarding": false
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2020-11-01",
            "name": "[parameters('networkInterfaces_webs_2403_name')]",
            "location": "francecentral",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_WebS_2_ip_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_VN_project_name'), 'DMZ-Subnet')]",
                "[resourceId('Microsoft.Network/applicationSecurityGroups', parameters('applicationSecurityGroups_ASG_WEB_name'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAddress": "192.168.3.6",
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_WebS_2_ip_name'))]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_VN_project_name'), 'DMZ-Subnet')]"
                            },
                            "primary": true,
                            "privateIPAddressVersion": "IPv4",
                            "applicationSecurityGroups": [
                                {
                                    "id": "[resourceId('Microsoft.Network/applicationSecurityGroups', parameters('applicationSecurityGroups_ASG_WEB_name'))]"
                                }
                            ]
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": []
                },
                "enableAcceleratedNetworking": false,
                "enableIPForwarding": false
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2020-11-01",
            "name": "[parameters('networkInterfaces_webs337_name')]",
            "location": "francecentral",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_WebS_ip_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_VN_project_name'), 'DMZ-Subnet')]",
                "[resourceId('Microsoft.Network/applicationSecurityGroups', parameters('applicationSecurityGroups_ASG_WEB_name'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAddress": "192.168.3.5",
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_WebS_ip_name'))]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_VN_project_name'), 'DMZ-Subnet')]"
                            },
                            "primary": true,
                            "privateIPAddressVersion": "IPv4",
                            "applicationSecurityGroups": [
                                {
                                    "id": "[resourceId('Microsoft.Network/applicationSecurityGroups', parameters('applicationSecurityGroups_ASG_WEB_name'))]"
                                }
                            ]
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": []
                },
                "enableAcceleratedNetworking": false,
                "enableIPForwarding": false
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2020-11-01",
            "name": "[parameters('networkInterfaces_win_10612_name')]",
            "location": "francecentral",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_Win_10_ip_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_VN_project_name'), 'BackSubnet')]",
                "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', parameters('loadBalancers_LB_Internal_name'), 'BackEndPool-2')]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAddress": "192.168.2.5",
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_Win_10_ip_name'))]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_VN_project_name'), 'BackSubnet')]"
                            },
                            "primary": true,
                            "privateIPAddressVersion": "IPv4",
                            "loadBalancerBackendAddressPools": [
                                {
                                    "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', parameters('loadBalancers_LB_Internal_name'), 'BackEndPool-2')]"
                                }
                            ]
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": []
                },
                "enableAcceleratedNetworking": false,
                "enableIPForwarding": false
            }
        }
    ]
}